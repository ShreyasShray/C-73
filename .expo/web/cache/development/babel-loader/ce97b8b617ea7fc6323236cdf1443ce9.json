{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shreyas shray\\\\Desktop\\\\willy\\\\screens\\\\transactionScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport firebase from \"firebase\";\nimport db from \"../config\";\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermission = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarcodeScannedData = function _callee2(_ref) {\n      var type, data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n\n              if (_this.state.buttonState === \"Bookid\") {\n                _this.setState({\n                  scannedBookid: data\n                });\n              } else if (_this.state.buttonState === \"Studentid\") {\n                _this.setState({\n                  scannedStudentid: data\n                });\n              }\n\n              _this.setState({\n                scanned: true,\n                buttonState: \"normal\"\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookIssue = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection(\"Transaction\").add({\n                StudentID: _this.state.scannedStudentid,\n                BookID: _this.state.scannedBookid,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                Transactiontype: \"Issue\"\n              });\n              db.collection(\"Books\").doc(_this.state.sca).update({\n                bookAvailability: false\n              });\n              db.collection(\"Students\").doc(_this.state.scannedStudentid).update({\n                numberOfBooksIssued: firebase.firestore.FieldValue.increment(1)\n              });\n\n              _this.setState({\n                scannedBookid: \"\",\n                scannedStudentid: \"\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookReturn = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db.collection(\"Transaction\").add({\n                StudentID: _this.state.scannedStudentid,\n                BookID: _this.state.scannedBookid,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                Transactiontype: \"Return\"\n              });\n              db.collection(\"Books\").doc(_this.state.scannedBookid).update({\n                bookAvailability: true\n              });\n              db.collection(\"Students\").doc(_this.state.scannedStudentid).update({\n                numberOfBooksIssued: firebase.firestore.FieldValue.increment(-1)\n              });\n\n              _this.setState({\n                scannedBookid: \"\",\n                scannedStudentid: \"\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkBookEligibilty = function _callee5() {\n      var bookRef, transactionType;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"Books\").where(\"bookID\", \"==\", _this.state.scannedBookid).get());\n\n            case 2:\n              bookRef = _context5.sent;\n\n              if (bookRef.docs.length == 0) {\n                transactionType = false;\n              } else {\n                bookRef.docs.map(function (doc) {\n                  var book = doc.data();\n                  alert(\"bk avl \" + book.bookAvailability);\n\n                  if (book.bookAvailability) {\n                    transactionType = \"Issue\";\n                  } else {\n                    transactionType = \"Return\";\n                  }\n                });\n              }\n\n              return _context5.abrupt(\"return\", transactionType);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityForBookIssue = function _callee6() {\n      var studentRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"Students\").where(\"studentID\", \"==\", _this.state.scannedStudentid).get());\n\n            case 2:\n              studentRef = _context6.sent;\n\n              if (studentRef.docs.length == 0) {\n                isStudentEligible = false;\n                alert(\"Student is not available in database\");\n\n                _this.setState({\n                  scannedBookid: \"\",\n                  scannedStudentid: \"\"\n                });\n              } else {\n                studentRef.docs.map(function (doc) {\n                  var students = doc.data();\n\n                  if (students.numberOfBooksIssued < 2) {\n                    isStudentEligible = true;\n                  } else {\n                    isStudentEligible = false;\n                    alert(\"The student has already issued 2 Books\");\n                  }\n                });\n\n                _this.setState({\n                  scannedStudentid: \"\",\n                  scannedBookid: \"\"\n                });\n              }\n\n              return _context6.abrupt(\"return\", isStudentEligible);\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityForBookReturn = function _callee7() {\n      var transactionRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"Transaction\").where(\"bookID\", \"==\", scannedBookid).limit(1).get());\n\n            case 2:\n              transactionRef = _context7.sent;\n              transactionRef.docs.map(function (doc) {\n                var lasttransaction = doc.data();\n\n                if (lasttransaction.StudentID === _this.state.scannedStudentid) {\n                  isStudentEligible = true;\n                } else {\n                  alert(\"This book is not issed by this student\");\n                }\n\n                _this.setState({\n                  scannedBookid: \"\",\n                  scannedStudentid: \"\"\n                });\n              });\n              return _context7.abrupt(\"return\", isStudentEligible);\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handletransaction = function _callee8() {\n      var transactionType, isStudentEligible, isStudentEligibleReturn;\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              alert(\"handle\");\n              _context8.next = 3;\n              return _regeneratorRuntime.awrap(_this.checkBookEligibilty());\n\n            case 3:\n              transactionType = _context8.sent;\n              console.log(\"Transaction type:\", transactionType);\n\n              if (transactionType) {\n                _context8.next = 10;\n                break;\n              }\n\n              alert(\"The Book Doesn't exist in the library database\");\n\n              _this.setState({\n                scannedBookid: \"\",\n                scannedStudentid: \"\"\n              });\n\n              _context8.next = 21;\n              break;\n\n            case 10:\n              if (!(transactionType === \"Issue\")) {\n                _context8.next = 17;\n                break;\n              }\n\n              _context8.next = 13;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookIssue());\n\n            case 13:\n              isStudentEligible = _context8.sent;\n\n              if (isStudentEligible) {\n                _this.initiateBookIssue();\n\n                alert(\"Book is Issued to the Student\");\n              }\n\n              _context8.next = 21;\n              break;\n\n            case 17:\n              _context8.next = 19;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookReturn());\n\n            case 19:\n              isStudentEligibleReturn = _context8.sent;\n\n              if (isStudentEligibleReturn) {\n                _this.initiateBookReturn();\n\n                alert(\"Book is Returned\");\n              }\n\n            case 21:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedData: \"\",\n      buttonState: \"normal\",\n      scannedBookid: \"\",\n      scannedStudentid: \"\",\n      transactionMessage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var buttonState = this.state.buttonState;\n      var scanned = this.state.scanned;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarcodeScannedData,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(KeyboardAvoidingView, {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 9\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 150,\n            height: 150\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: \"center\",\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 11\n          }\n        }, \"Wily\"), React.createElement(View, {\n          style: styles.inputview,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputbox,\n          placeholder: \"Bookid\",\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              scannedBookid: text\n            });\n          },\n          value: this.state.scannedBookid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.getCameraPermission(\"Bookid\");\n          },\n          style: styles.buttonstyle2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputview,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 11\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputbox,\n          placeholder: \"Studentid\",\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              scannedStudentid: text\n            });\n          },\n          value: this.state.scannedStudentid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.getCameraPermission(\"Studentid\");\n          },\n          style: styles.buttonstyle2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.submitbuttoncontainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 11\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.submitbutton,\n          onPress: function _callee9() {\n            return _regeneratorRuntime.async(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    return _context9.abrupt(\"return\", _this2.handletransaction());\n\n                  case 1:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.submitbuttontext,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }\n        }, \"Submit\"))));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  displaytext: {\n    textAlign: \"center\",\n    alignItems: \"center\",\n    marginTop: 300,\n    fontSize: 20,\n    textDecorationLine: \"underline\"\n  },\n  buttonstyle: {\n    marginTop: 30,\n    backgroundColor: \"skyblue\"\n  },\n  buttonstyle2: {\n    backgroundColor: \"skyblue\"\n  },\n  buttontext: {\n    fontSize: 30\n  },\n  inputbox: {},\n  inputview: {\n    margin: 20,\n    flexDirection: \"row\",\n    borderWidth: 1.4,\n    borderColor: \"black\",\n    borderRadius: 4\n  },\n  submitbuttoncontainer: {\n    alignItems: \"center\",\n    backgroundColor: \"blue\"\n  },\n  submitbutton: {\n    borderRadius: 3\n  },\n  submitbuttontext: {\n    textAlign: \"center\",\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Shreyas shray/Desktop/willy/screens/transactionScreen.js"],"names":["React","Permissions","BarCodeScanner","firebase","db","TransactionScreen","getCameraPermission","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarcodeScannedData","type","data","state","scannedBookid","scannedStudentid","initiateBookIssue","collection","add","StudentID","BookID","date","firestore","Timestamp","now","toDate","Transactiontype","doc","sca","update","bookAvailability","numberOfBooksIssued","FieldValue","increment","initiateBookReturn","checkBookEligibilty","where","get","bookRef","docs","length","transactionType","map","book","alert","checkStudentEligibilityForBookIssue","studentRef","isStudentEligible","students","checkStudentEligibilityForBookReturn","limit","transactionRef","lasttransaction","handletransaction","console","log","isStudentEligibleReturn","scannedData","transactionMessage","undefined","StyleSheet","absoluteFillObject","display","justifyContent","alignItems","require","width","height","textAlign","fontSize","styles","inputview","inputbox","text","buttonstyle2","submitbuttoncontainer","submitbutton","submitbuttontext","Component","create","displaytext","marginTop","textDecorationLine","buttonstyle","backgroundColor","buttontext","margin","flexDirection","borderWidth","borderColor","borderRadius"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  TextInput,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  ToastAndroid,\r\n  Alert,\r\n} from \"react-native\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\r\nimport firebase from \"firebase\";\r\nimport db from \"../config\";\r\n\r\nexport default class TransactionScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hasCameraPermissions: null,\r\n      scanned: false,\r\n      scannedData: \"\",\r\n      buttonState: \"normal\",\r\n      scannedBookid: \"\",\r\n      scannedStudentid: \"\",\r\n      transactionMessage: \"\",\r\n    };\r\n  }\r\n  getCameraPermission = async (id) => {\r\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n    this.setState({\r\n      hasCameraPermissions: status === \"granted\",\r\n      buttonState: id,\r\n      scanned: false,\r\n    });\r\n  };\r\n  handleBarcodeScannedData = async ({ type, data }) => {\r\n    if (this.state.buttonState === \"Bookid\") {\r\n      this.setState({\r\n        scannedBookid: data,\r\n      });\r\n    } else if (this.state.buttonState === \"Studentid\") {\r\n      this.setState({\r\n        scannedStudentid: data,\r\n      });\r\n    }\r\n    this.setState({\r\n      scanned: true,\r\n      buttonState: \"normal\",\r\n    });\r\n  };\r\n  initiateBookIssue = async () => {\r\n    db.collection(\"Transaction\").add({\r\n      StudentID: this.state.scannedStudentid,\r\n      BookID: this.state.scannedBookid,\r\n      date: firebase.firestore.Timestamp.now().toDate(),\r\n      Transactiontype: \"Issue\",\r\n    });\r\n    db.collection(\"Books\").doc(this.state.sca).update({\r\n      bookAvailability: false,\r\n    });\r\n    db.collection(\"Students\")\r\n      .doc(this.state.scannedStudentid)\r\n      .update({\r\n        numberOfBooksIssued: firebase.firestore.FieldValue.increment(1),\r\n      });\r\n    this.setState({\r\n      scannedBookid: \"\",\r\n      scannedStudentid: \"\",\r\n    });\r\n  };\r\n  initiateBookReturn = async () => {\r\n    db.collection(\"Transaction\").add({\r\n      StudentID: this.state.scannedStudentid,\r\n      BookID: this.state.scannedBookid,\r\n      date: firebase.firestore.Timestamp.now().toDate(),\r\n      Transactiontype: \"Return\",\r\n    });\r\n    db.collection(\"Books\").doc(this.state.scannedBookid).update({\r\n      bookAvailability: true,\r\n    });\r\n    db.collection(\"Students\")\r\n      .doc(this.state.scannedStudentid)\r\n      .update({\r\n        numberOfBooksIssued: firebase.firestore.FieldValue.increment(-1),\r\n      });\r\n    this.setState({\r\n      scannedBookid: \"\",\r\n      scannedStudentid: \"\",\r\n    });\r\n  };\r\n  checkBookEligibilty = async () => {\r\n    const bookRef = await db\r\n      .collection(\"Books\")\r\n      .where(\"bookID\", \"==\", this.state.scannedBookid)\r\n      .get();\r\n    var transactionType;\r\n    if (bookRef.docs.length == 0) {\r\n      transactionType = false;\r\n    } else {\r\n      bookRef.docs.map((doc) => {\r\n        var book = doc.data();\r\n        alert(\"bk avl \" + book.bookAvailability);\r\n        if (book.bookAvailability) {\r\n          transactionType = \"Issue\";\r\n        } else {\r\n          transactionType = \"Return\";\r\n        }\r\n      });\r\n    }\r\n    return transactionType;\r\n  };\r\n  checkStudentEligibilityForBookIssue = async () => {\r\n    var studentRef = await db\r\n      .collection(\"Students\")\r\n      .where(\"studentID\", \"==\", this.state.scannedStudentid)\r\n      .get();\r\n    var isStudentEligible;\r\n    if (studentRef.docs.length == 0) {\r\n      isStudentEligible = false;\r\n      alert(\"Student is not available in database\");\r\n      this.setState({\r\n        scannedBookid: \"\",\r\n        scannedStudentid: \"\",\r\n      });\r\n    } else {\r\n      studentRef.docs.map((doc) => {\r\n        var students = doc.data();\r\n        if (students.numberOfBooksIssued < 2) {\r\n          isStudentEligible = true;\r\n        } else {\r\n          isStudentEligible = false;\r\n          alert(\"The student has already issued 2 Books\");\r\n        }\r\n      });\r\n      this.setState({\r\n        scannedStudentid: \"\",\r\n        scannedBookid: \"\",\r\n      });\r\n    }\r\n    return isStudentEligible;\r\n  };\r\n  checkStudentEligibilityForBookReturn = async () => {\r\n    var transactionRef = await db\r\n      .collection(\"Transaction\")\r\n      .where(\"bookID\", \"==\", scannedBookid)\r\n      .limit(1)\r\n      .get();\r\n    var isStudentEligible;\r\n    transactionRef.docs.map((doc) => {\r\n      var lasttransaction = doc.data();\r\n      if (lasttransaction.StudentID === this.state.scannedStudentid) {\r\n        isStudentEligible = true;\r\n      } else {\r\n        alert(\"This book is not issed by this student\");\r\n      }\r\n      this.setState({\r\n        scannedBookid: \"\",\r\n        scannedStudentid: \"\",\r\n      });\r\n    });\r\n    return isStudentEligible;\r\n  };\r\n  handletransaction = async () => {\r\n    //verify if the student is eligible for book issue or return or none\r\n    //student id exists in the database\r\n    //issue : number of book issued < 2\r\n    //issue: verify book availability\r\n    //return: last transaction -> book issued by the student id\r\n    alert(\"handle\");\r\n    var transactionType = await this.checkBookEligibilty();\r\n    console.log(\"Transaction type:\", transactionType);\r\n    if (!transactionType) {\r\n      alert(\"The Book Doesn't exist in the library database\");\r\n      this.setState({\r\n        scannedBookid: \"\",\r\n        scannedStudentid: \"\",\r\n      });\r\n    } else if (transactionType === \"Issue\") {\r\n      var isStudentEligible = await this.checkStudentEligibilityForBookIssue();\r\n      if (isStudentEligible) {\r\n        this.initiateBookIssue();\r\n        alert(\"Book is Issued to the Student\");\r\n      }\r\n    } else {\r\n      var isStudentEligibleReturn = await this.checkStudentEligibilityForBookReturn();\r\n      if (isStudentEligibleReturn) {\r\n        this.initiateBookReturn();\r\n        alert(\"Book is Returned\");\r\n      }\r\n    }\r\n\r\n    /*db.collection(\"Books\").doc(this.state.scannedBookid).get().then((doc)=>{\r\n            var book = doc.data()\r\n            var transactionMessage;\r\n            if(book.bookAvailability){\r\n                this.initiateBookIssue()\r\n                transactionMessage=\"Book Issued\"\r\n                ToastAndroid.show(transactionMessage, ToastAndroid.SHORT)\r\n            }else{\r\n                this.initiateBookReturn()\r\n                transactionMessage=\"Book Returned\"\r\n                ToastAndroid.show(transactionMessage, ToastAndroid.SHORT)\r\n            }\r\n            this.setState({\r\n                transactionMessage:transactionMessage\r\n            })\r\n        })*/\r\n  };\r\n  render() {\r\n    const hasCameraPermissions = this.state.hasCameraPermissions;\r\n    const buttonState = this.state.buttonState;\r\n    const scanned = this.state.scanned;\r\n    if (buttonState !== \"normal\" && hasCameraPermissions) {\r\n      return (\r\n        <BarCodeScanner\r\n          onBarCodeScanned={scanned ? undefined : this.handleBarcodeScannedData}\r\n          style={StyleSheet.absoluteFillObject}\r\n        ></BarCodeScanner>\r\n      );\r\n    } else {\r\n      return (\r\n        <KeyboardAvoidingView\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Image\r\n            source={require(\"../assets/booklogo.jpg\")}\r\n            style={{ width: 150, height: 150 }}\r\n          ></Image>\r\n          <Text style={{ textAlign: \"center\", fontSize: 20 }}>Wily</Text>\r\n          <View style={styles.inputview}>\r\n            <TextInput\r\n              style={styles.inputbox}\r\n              placeholder={\"Bookid\"}\r\n              onChangeText={(text) => {\r\n                this.setState({ scannedBookid: text });\r\n              }}\r\n              value={this.state.scannedBookid}\r\n            ></TextInput>\r\n            <TouchableOpacity\r\n              onPress={() => this.getCameraPermission(\"Bookid\")}\r\n              style={styles.buttonstyle2}\r\n            >\r\n              <Text>Scan</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={styles.inputview}>\r\n            <TextInput\r\n              style={styles.inputbox}\r\n              placeholder={\"Studentid\"}\r\n              onChangeText={(text) => {\r\n                this.setState({ scannedStudentid: text });\r\n              }}\r\n              value={this.state.scannedStudentid}\r\n            ></TextInput>\r\n            <TouchableOpacity\r\n              onPress={() => this.getCameraPermission(\"Studentid\")}\r\n              style={styles.buttonstyle2}\r\n            >\r\n              <Text>Scan</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={styles.submitbuttoncontainer}>\r\n            <TouchableOpacity\r\n              style={styles.submitbutton}\r\n              onPress={async () => this.handletransaction()}\r\n            >\r\n              <Text style={styles.submitbuttontext}>Submit</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </KeyboardAvoidingView>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  displaytext: {\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 300,\r\n    fontSize: 20,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n  buttonstyle: {\r\n    marginTop: 30,\r\n    backgroundColor: \"skyblue\",\r\n  },\r\n  buttonstyle2: {\r\n    backgroundColor: \"skyblue\",\r\n  },\r\n  buttontext: {\r\n    fontSize: 30,\r\n  },\r\n  inputbox: {},\r\n  inputview: {\r\n    margin: 20,\r\n    flexDirection: \"row\",\r\n    borderWidth: 1.4,\r\n    borderColor: \"black\",\r\n    borderRadius: 4,\r\n  },\r\n  submitbuttoncontainer: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"blue\",\r\n  },\r\n  submitbutton: {\r\n    borderRadius: 3,\r\n  },\r\n  submitbuttontext: {\r\n    textAlign: \"center\",\r\n    fontSize: 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}